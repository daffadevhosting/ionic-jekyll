I"8<div class="payment-point">
<ion-card>
<img src="/assets/images/qris_logo.jpg" />
<ion-item onclick="openQrisModal()" class="ion-activated">
<ion-icon name="barcode-outline" slot="start"></ion-icon>
<ion-label>Scan Qris</ion-label>
<ion-icon name="chevron-forward-outline" slot="end"></ion-icon>
&lt;/ion-card&gt;
<ion-card>
<img src="/assets/images/bank_transfer.jpg" />
&lt;/ion-item&gt;
<ion-item onclick="openBankModal()" class="ion-activated">
<ion-icon name="card-outline" slot="start"></ion-icon>
<ion-label>Transfer Bank</ion-label>
<ion-icon name="chevron-forward-outline" slot="end"></ion-icon>
</ion-item>
</ion-card>
&lt;/div&gt;

<script>
      const pageQl = document.querySelector('.ion-page');
      customElements.define(
        'modal-content',
        class ModalContent extends HTMLElement {
          connectedCallback() {
            this.innerHTML = `
          <ion-header translucent>
            <ion-toolbar>
              <ion-title>Scan QRis</ion-title>
              <ion-buttons slot="end">
                <ion-button onclick="dismissModal()">Tutup</ion-button>
              </ion-buttons>
            </ion-toolbar>
          </ion-header>
          <ion-content fullscreen>
            <ion-card>
<img src="/assets/images/qris.jpeg" />
<ion-card-content>
</ion-card-content>
</ion-card>
          </ion-content>
        `;
          }
        }
      );


      const pageBl = document.querySelector('.ion-page');
      customElements.define(
        'modal-content',
        class ModalContent extends HTMLElement {
          connectedCallback() {
            this.innerHTML = `
          <ion-header translucent>
            <ion-toolbar>
              <ion-title>Scan QRis</ion-title>
              <ion-buttons slot="end">
                <ion-button onclick="dismissModal()">Tutup</ion-button>
              </ion-buttons>
            </ion-toolbar>
          </ion-header>
          <ion-content fullscreen>
            <ion-card>
<ion-item>
<ion-label>NoRek</ion-label>
</ion-item>
</ion-card>
          </ion-content>
        `;
          }
        }
      );

      let currentModal = null;
      async function openModal(opts = {}) {
        const modal = await modalController.create({
          component: 'modal-content',
          ...opts,
        });
        modal.present();

        currentModal = modal;
      }

      function openBankModal() {
        openModal({
          breakpoints: [0, 0.2, 0.5, 1],
          initialBreakpoint: 0.2,
        });
      }

      function openQrisModal() {
        openModal({
          swipeToClose: true,
          presentingElement: pageQl,
        });
      }

      function dismissModal() {
        if (currentModal) {
          currentModal.dismiss().then(() => {
            currentModal = null;
          });
        }
      }
    </script>

</ion-item></ion-card></div>
:ET