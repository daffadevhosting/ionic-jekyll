I"ì<div class="payment-point">
<ion-card>
<img src="/assets/images/qris_logo.jpg" />
<ion-item onclick="openCardModal()" class="ion-activated">
<ion-icon name="barcode-outline" slot="start"></ion-icon>
<ion-label>Scan Qris</ion-label>
<ion-icon name="chevron-forward-outline" slot="end"></ion-icon>
&lt;/ion-card&gt;
<ion-card>
<img src="/assets/images/bank_transfer.jpg" />
&lt;/ion-item&gt;
<buttonBank>
<ion-item class="ion-activated">
<ion-icon name="card-outline" slot="start"></ion-icon>
<ion-label>Transfer Bank</ion-label>
<ion-icon name="chevron-forward-outline" slot="end"></ion-icon>
</ion-item>
</buttonBank>
</ion-card>
&lt;/div&gt;

<script>
      const pageEl = document.querySelector('.ion-page');
      customElements.define(
        'modal-content',
        class ModalContent extends HTMLElement {
          connectedCallback() {
            this.innerHTML = `
          <ion-header translucent>
            <ion-toolbar>
              <ion-title>Scan QRis</ion-title>
              <ion-buttons slot="end">
                <ion-button onclick="dismissModal()">Tutup</ion-button>
              </ion-buttons>
            </ion-toolbar>
          </ion-header>
          <ion-content fullscreen>
            <ion-card>
<img src="/assets/images/qris.jpeg" />
<ion-card-content>
</ion-card-content>
</ion-card>
          </ion-content>
        `;
          }
        }
      );

      let currentModal = null;
      async function openModal(opts = {}) {
        const modal = await modalController.create({
          component: 'modal-content',
          ...opts,
        });
        modal.present();

        currentModal = modal;
      }

      function openSheetModal() {
        openModal({
          breakpoints: [0, 0.2, 0.5, 1],
          initialBreakpoint: 0.2,
        });
      }

      function openCardModal() {
        openModal({
          swipeToClose: true,
          presentingElement: pageEl,
        });
      }

      function dismissModal() {
        if (currentModal) {
          currentModal.dismiss().then(() => {
            currentModal = null;
          });
        }
      }
    </script>


    <script>
      const bank = document.querySelector('buttonBank');
      bank.addEventListener('click', handleButtonClick);

      async function handleButtonClick() {
        const alert = await alertController.create({
          header: 'Transfer Bank',
          message: '<ion-card><ion-item onclick="myBri()" class="ion-activated"><ion-label>Bank BRI </ion-label value="000501121217502" readonly><ion-icon name="copy-outline" slot="end"></ion-icon></ion-item><ion-item onclick="myBtpn()" class="ion-activated"><ion-label value="903700011795" readonly>Bank BTPN </ion-label><ion-icon name="copy-outline" slot="end"></ion-icon></ion-item></ion-card>',
          buttons: ['Agree'],
        });

        await alert.present();
      }
    </script>

    <script type="text/javascript">
function myBtpn() {
  var copyText = document.getElementById("btpn");
  copyText.select();
  copyText.setSelectionRange(0, 99999)
  document.execCommand("copy");
  alert("Nomor rekening " + copyText.value + " Untuk BANK BTPN berhasil disalin, Silahkan melakukan pembayaran.");
}
</script>

<script type="text/javascript">
function myBri() {
  var copyText = document.getElementById("bri");
  copyText.select();
  copyText.setSelectionRange(0, 99999)
  document.execCommand("copy");
  alert("Nomor rekening " + copyText.value + " Untuk BANK BRI berhasil disalin, Silahkan melakukan pembayaran.");
}
    </script>
</ion-item></ion-card></div>
:ET